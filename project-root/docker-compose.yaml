services:
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certbot/conf:/etc/nginx/ssl:ro
      - ./certbot/data:/var/www/certbot
    depends_on:
      - user-service
      - chat-service
      - project-service
      - file-service
      - media-service
      - ai-service
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
  
  certbot:
    image: certbot/certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/data:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  user-service:
    build: 
      context: ./services/user
      dockerfile: Dockerfile
    expose:
      - "3000"
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/users
      - NODE_ENV=development
      - PORT=3000
    depends_on:
      - postgres

  chat-service:
    build:
      context: ./services/chat
      dockerfile: Dockerfile
    expose:
      - "3001"
    environment:
      - MONGODB_URI=mongodb://mongodb:27017/chat
      - REDIS_URI=redis://redis:6379
      - NODE_ENV=development
      - PORT=3001
    depends_on:
      - mongodb
      - redis

  project-service:
    build:
      context: ./services/project
      dockerfile: Dockerfile
    expose:
      - "3003"
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/projects
      - NODE_ENV=development
      - PORT=3003
    depends_on:
      - postgres

  file-service:
    build:
      context: ./services/file
      dockerfile: Dockerfile
    expose:
      - "3004"
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/files
      - MINIO_ENDPOINT=minio
      - MINIO_PORT=9000
      - MINIO_USE_SSL=false
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
      - NODE_ENV=development
      - PORT=3004
    depends_on:
      - postgres
      - minio

  media-service:
    build:
      context: ./services/media
      dockerfile: Dockerfile
    expose:
      - "3005"
    environment:
      - REDIS_URI=redis://redis:6379
      - NODE_ENV=development
      - PORT=3005
    depends_on:
      - redis

  ai-service:
    build:
      context: ./services/ai
      dockerfile: Dockerfile
    expose:
      - "3006"
    environment:
      - NODE_ENV=development
      - PORT=3006
      - N8N_API_KEY=${N8N_API_KEY}
      - N8N_TEXT_ANALYSIS_WEBHOOK=${N8N_TEXT_ANALYSIS_WEBHOOK}
      - N8N_DOCUMENT_PROCESSING_WEBHOOK=${N8N_DOCUMENT_PROCESSING_WEBHOOK}
      - N8N_IMAGE_ANALYSIS_WEBHOOK=${N8N_IMAGE_ANALYSIS_WEBHOOK}
      - N8N_RECOMMENDATIONS_WEBHOOK=${N8N_RECOMMENDATIONS_WEBHOOK}

  postgres:
    image: postgres:14-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_MULTIPLE_DATABASES=users,projects,files
    volumes:
      - postgres_data:/var/lib/postgresql/data

  mongodb:
    image: mongo:5
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  minio:
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"

volumes:
  postgres_data:
  mongodb_data:
  redis_data:
  minio_data: